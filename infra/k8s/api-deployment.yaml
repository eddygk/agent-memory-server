apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-memory-server-api
  namespace: redis-memory-server
  labels:
    app: redis-memory-server-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis-memory-server-api
  template:
    metadata:
      labels:
        app: redis-memory-server-api
    spec:
      containers:
      - name: api
        image: YOUR_REGISTRY/redis-memory-server:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: redis-memory-server-config
        - secretRef:
            name: redis-memory-server-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      imagePullSecrets:
      - name: registry-secret  # If using private registry
---
apiVersion: v1
kind: Service
metadata:
  name: redis-memory-server-api
  namespace: redis-memory-server
spec:
  selector:
    app: redis-memory-server-api
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis-memory-server-api
  namespace: redis-memory-server
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # If using cert-manager
spec:
  tls:
  - hosts:
    - api.your-domain.com
    secretName: redis-memory-server-tls
  rules:
  - host: api.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redis-memory-server-api
            port:
              number: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-memory-server-api-hpa
  namespace: redis-memory-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis-memory-server-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
